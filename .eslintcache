[{"D:\\Work\\Learn\\React\\udemy-course\\src\\index.js":"1","D:\\Work\\Learn\\React\\udemy-course\\src\\reportWebVitals.js":"2","D:\\Work\\Learn\\React\\udemy-course\\src\\App.js":"3","D:\\Work\\Learn\\React\\udemy-course\\src\\ErrorBoundary\\ErrorBoundary.js":"4","D:\\Work\\Learn\\React\\udemy-course\\src\\components\\Person\\Persons\\Persons.js":"5","D:\\Work\\Learn\\React\\udemy-course\\src\\components\\Person\\Persons\\Person\\Person.js":"6","D:\\Work\\Learn\\React\\udemy-course\\src\\components\\Cockpit\\Cockpit.js":"7","D:\\Work\\Learn\\React\\udemy-course\\src\\components\\hoc\\Auxiliary.js":"8"},{"size":500,"mtime":1611120345021,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2018,"mtime":1611217719672,"results":"12","hashOfConfig":"10"},{"size":395,"mtime":1611126131943,"results":"13","hashOfConfig":"10"},{"size":1504,"mtime":1611294952524,"results":"14","hashOfConfig":"10"},{"size":1539,"mtime":1611294966192,"results":"15","hashOfConfig":"10"},{"size":873,"mtime":1611298817488,"results":"16","hashOfConfig":"10"},{"size":43,"mtime":1611298856221,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1yz5u9t",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\Learn\\React\\udemy-course\\src\\index.js",[],["36","37"],"D:\\Work\\Learn\\React\\udemy-course\\src\\reportWebVitals.js",[],"D:\\Work\\Learn\\React\\udemy-course\\src\\App.js",[],"D:\\Work\\Learn\\React\\udemy-course\\src\\ErrorBoundary\\ErrorBoundary.js",[],"D:\\Work\\Learn\\React\\udemy-course\\src\\components\\Person\\Persons\\Persons.js",[],"D:\\Work\\Learn\\React\\udemy-course\\src\\components\\Person\\Persons\\Person\\Person.js",["38"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Person.module.css\";\r\nimport Radium from \"radium\";\r\n\r\nconst Person = (props) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"Person.js | useEffect | runs before component unmounts\");\r\n    };\r\n  });\r\n\r\n  const [ageState, setAgeState] = useState({\r\n    age: 30,\r\n  });\r\n  const [addClass, setAddClass] = useState(false);\r\n\r\n  const clickHandler = () => {\r\n    setAgeState({\r\n      age: Math.floor(Math.random() * 20),\r\n    });\r\n  };\r\n\r\n  const classHandler = () => {\r\n    setAddClass(!addClass);\r\n  };\r\n\r\n  const buttonStyle = {\r\n    borderRadius: \"7px\",\r\n    padding: \"1em\",\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    transition: \"all 0.2s ease\",\r\n    \":hover\": {\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  };\r\n\r\n  // throw new Error();\r\n\r\n  return (\r\n    <div className={styles.Person}>\r\n      <strong onClick={props.click}>Random {props.title}:</strong>{\" \"}\r\n      {Math.floor(Math.random() * 100)}\r\n      <p className={styles.para}>Age: {ageState.age}</p>\r\n      <input type=\"text\" onChange={props.change} value={props.title} />\r\n      <button style={buttonStyle} onClick={clickHandler}>\r\n        Click\r\n      </button>\r\n      <button onClick={classHandler} className={addClass ? styles.btn : null}>\r\n        Using CSS class\r\n      </button>\r\n      <p>{props.children}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Person);\r\n","D:\\Work\\Learn\\React\\udemy-course\\src\\components\\Cockpit\\Cockpit.js",[],"D:\\Work\\Learn\\React\\udemy-course\\src\\components\\hoc\\Auxiliary.js",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":1,"column":1,"nodeType":"50","endLine":1,"endColumn":42},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Radium' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]